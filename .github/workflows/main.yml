name: CI Build Testing
on:
  push:
    branches: [ master ]
    paths-ignore:
      - Jenkinsfile
      - Readme.md
      - pom.xml
  workflow_dispatch:

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: myrepo
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        VALUEFILE=$(git --no-pager diff --name-only HEAD~1 | sort -u | awk 'BEGIN {FS="/"}  {print $1}' | uniq)
        for folder in ${LIST=$(echo $VALUEFILE | grep -o '[^ ]\+')}
        do
           if [ -e $folder/Dockerfile ];
           then
               docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
               docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
               
           fi
        done
  Release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Lambda deployment
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: myrepo
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        #Trigger Lambda
        aws lambda update-function-code --region us-east-2 --function-name my-function --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
  

