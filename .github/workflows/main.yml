name: CI Build Testing
on:
  push:
    branches: [ master ]
    paths-ignore:
      - Jenkinsfile
      - Readme.md
      - pom.xml
  workflow_dispatch:
jobs:
  login:
    name: AWS ECR login
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: myrepo
        IMAGE_TAG: ${{ github.run_number }}
  builds:
    name: build
    needs: login
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
    steps:
    - name: Checkout
      uses: actions/checkout@master  
    - name: folder_change
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          server:
            - 'server/**'
          webapp:
            - 'webapp/**'
    - name: server_tests
      if: steps.filter.outputs.server == 'true'
      run: |
            cd server
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/server:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY/server:$IMAGE_TAG

    - name: webapp_tests
      if: steps.filter.outputs.webapp == 'true'
      run: |
            cd server
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY/webapp:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY/webapp:$IMAGE_TAG

